const std = @import("std");

pub const Timings = &[_][]const u8{
    &[_]u8{4}, // 0x00 - NOP
    &[_]u8{}, // 0x01
    &[_]u8{}, // 0x02
    &[_]u8{}, // 0x03
    &[_]u8{}, // 0x04
    &[_]u8{}, // 0x05
    &[_]u8{ 4, 3 }, // 0x06 - LD B,n
    &[_]u8{}, // 0x07
    &[_]u8{}, // 0x08
    &[_]u8{}, // 0x09
    &[_]u8{}, // 0x0A
    &[_]u8{}, // 0x0B
    &[_]u8{}, // 0x0C
    &[_]u8{}, // 0x0D
    &[_]u8{ 4, 3 }, // 0x0E - LD C,n
    &[_]u8{}, // 0x0F
    &[_]u8{}, // 0x10
    &[_]u8{}, // 0x11
    &[_]u8{}, // 0x12
    &[_]u8{}, // 0x13
    &[_]u8{}, // 0x14
    &[_]u8{}, // 0x15
    &[_]u8{ 4, 3 }, // 0x16 - LD D,n
    &[_]u8{}, // 0x17
    &[_]u8{}, // 0x18
    &[_]u8{}, // 0x19
    &[_]u8{}, // 0x1A
    &[_]u8{}, // 0x1B
    &[_]u8{}, // 0x1C
    &[_]u8{}, // 0x1D
    &[_]u8{ 4, 3 }, // 0x1E - LD E,n
    &[_]u8{}, // 0x1F
    &[_]u8{}, // 0x20
    &[_]u8{}, // 0x21
    &[_]u8{}, // 0x22
    &[_]u8{}, // 0x23
    &[_]u8{}, // 0x24
    &[_]u8{}, // 0x25
    &[_]u8{ 4, 3 }, // 0x26 - LD H,n
    &[_]u8{}, // 0x27
    &[_]u8{}, // 0x28
    &[_]u8{}, // 0x29
    &[_]u8{}, // 0x2A
    &[_]u8{}, // 0x2B
    &[_]u8{}, // 0x2C
    &[_]u8{}, // 0x2D
    &[_]u8{ 4, 3 }, // 0x2E - LD L,n
    &[_]u8{}, // 0x2F
    &[_]u8{}, // 0x30
    &[_]u8{}, // 0x31
    &[_]u8{}, // 0x32
    &[_]u8{}, // 0x33
    &[_]u8{}, // 0x34
    &[_]u8{}, // 0x35
    &[_]u8{}, // 0x36
    &[_]u8{}, // 0x37
    &[_]u8{}, // 0x38
    &[_]u8{}, // 0x39
    &[_]u8{}, // 0x3A
    &[_]u8{}, // 0x3B
    &[_]u8{}, // 0x3C
    &[_]u8{}, // 0x3D
    &[_]u8{ 4, 3 }, // 0x3E - LD A,n
    &[_]u8{}, // 0x3F
    &[_]u8{4}, // 0x40 - LD B,B
    &[_]u8{4}, // 0x41 - LD B,C
    &[_]u8{4}, // 0x42 - LD B,D
    &[_]u8{4}, // 0x43 - LD B,E
    &[_]u8{4}, // 0x44 - LD B,H
    &[_]u8{4}, // 0x45 - LD B,L
    &[_]u8{ 4, 3 }, // 0x46 - LD B, (HL)
    &[_]u8{4}, // 0x47 - LD B,A
    &[_]u8{4}, // 0x48 - LD C,B
    &[_]u8{4}, // 0x49 - LD C,C
    &[_]u8{4}, // 0x4A - LD C,D
    &[_]u8{4}, // 0x4B - LD C,E
    &[_]u8{4}, // 0x4C - LD C,H
    &[_]u8{4}, // 0x4D - LD C,L
    &[_]u8{ 4, 3 }, // 0x4E - LD C, (HL)
    &[_]u8{4}, // 0x4F - LD C,A
    &[_]u8{4}, // 0x50 - LD D,B
    &[_]u8{4}, // 0x51 - LD D,C
    &[_]u8{4}, // 0x52 - LD D,D
    &[_]u8{4}, // 0x53 - LD D,E
    &[_]u8{4}, // 0x54 - LD D,H
    &[_]u8{4}, // 0x55 - LD D,L
    &[_]u8{ 4, 3 }, // 0x56 - LD D, (HL)
    &[_]u8{4}, // 0x57 - LD D,A
    &[_]u8{4}, // 0x58 - LD E,B
    &[_]u8{4}, // 0x59 - LD E,C
    &[_]u8{4}, // 0x5A - LD E,D
    &[_]u8{4}, // 0x5B - LD E,E
    &[_]u8{4}, // 0x5C - LD E,H
    &[_]u8{4}, // 0x5D - LD E,L
    &[_]u8{ 4, 3 }, // 0x5E - LD E, (HL)
    &[_]u8{4}, // 0x5F - LD E,A
    &[_]u8{4}, // 0x60 - LD H,B
    &[_]u8{4}, // 0x61 - LD H,C
    &[_]u8{4}, // 0x62 - LD H,D
    &[_]u8{4}, // 0x63 - LD H,E
    &[_]u8{4}, // 0x64 - LD H,H
    &[_]u8{4}, // 0x65 - LD H,L
    &[_]u8{ 4, 3 }, // 0x66 LD H, (HL)
    &[_]u8{4}, // 0x67 - LD H,A
    &[_]u8{4}, // 0x68 - LD L,B
    &[_]u8{4}, // 0x69 - LD L,C
    &[_]u8{4}, // 0x6A - LD L,D
    &[_]u8{4}, // 0x6B - LD L,E
    &[_]u8{4}, // 0x6C - LD L,H
    &[_]u8{4}, // 0x6D - LD L,L
    &[_]u8{ 4, 3 }, // 0x6E - LD L, (HL)
    &[_]u8{4}, // 0x6F - LD L,A
    &[_]u8{}, // 0x70
    &[_]u8{}, // 0x71
    &[_]u8{}, // 0x72
    &[_]u8{}, // 0x73
    &[_]u8{}, // 0x74
    &[_]u8{}, // 0x75
    &[_]u8{}, // 0x76
    &[_]u8{}, // 0x77
    &[_]u8{4}, // 0x78 - LD A,B
    &[_]u8{4}, // 0x79 - LD A,C
    &[_]u8{4}, // 0x7A - LD A,D
    &[_]u8{4}, // 0x7B - LD A,E
    &[_]u8{4}, // 0x7C - LD A,H
    &[_]u8{4}, // 0x7D - LD A,L
    &[_]u8{ 4, 3 }, // 0x7E
    &[_]u8{4}, // 0x7F - LD A,A
    &[_]u8{}, // 0x80
    &[_]u8{}, // 0x81
    &[_]u8{}, // 0x82
    &[_]u8{}, // 0x83
    &[_]u8{}, // 0x84
    &[_]u8{}, // 0x85
    &[_]u8{}, // 0x86
    &[_]u8{}, // 0x87
    &[_]u8{}, // 0x88
    &[_]u8{}, // 0x89
    &[_]u8{}, // 0x8A
    &[_]u8{}, // 0x8B
    &[_]u8{}, // 0x8C
    &[_]u8{}, // 0x8D
    &[_]u8{}, // 0x8E
    &[_]u8{}, // 0x8F
    &[_]u8{}, // 0x90
    &[_]u8{}, // 0x91
    &[_]u8{}, // 0x92
    &[_]u8{}, // 0x93
    &[_]u8{}, // 0x94
    &[_]u8{}, // 0x95
    &[_]u8{}, // 0x96
    &[_]u8{}, // 0x97
    &[_]u8{}, // 0x98
    &[_]u8{}, // 0x99
    &[_]u8{}, // 0x9A
    &[_]u8{}, // 0x9B
    &[_]u8{}, // 0x9C
    &[_]u8{}, // 0x9D
    &[_]u8{}, // 0x9E
    &[_]u8{}, // 0x9F
    &[_]u8{}, // 0xA0
    &[_]u8{}, // 0xA1
    &[_]u8{}, // 0xA2
    &[_]u8{}, // 0xA3
    &[_]u8{}, // 0xA4
    &[_]u8{}, // 0xA5
    &[_]u8{}, // 0xA6
    &[_]u8{}, // 0xA7
    &[_]u8{}, // 0xA8
    &[_]u8{}, // 0xA9
    &[_]u8{}, // 0xAA
    &[_]u8{}, // 0xAB
    &[_]u8{}, // 0xAC
    &[_]u8{}, // 0xAD
    &[_]u8{}, // 0xAE
    &[_]u8{}, // 0xAF
    &[_]u8{}, // 0xB0
    &[_]u8{}, // 0xB1
    &[_]u8{}, // 0xB2
    &[_]u8{}, // 0xB3
    &[_]u8{}, // 0xB4
    &[_]u8{}, // 0xB5
    &[_]u8{}, // 0xB6
    &[_]u8{}, // 0xB7
    &[_]u8{}, // 0xB8
    &[_]u8{}, // 0xB9
    &[_]u8{}, // 0xBA
    &[_]u8{}, // 0xBB
    &[_]u8{}, // 0xBC
    &[_]u8{}, // 0xBD
    &[_]u8{}, // 0xBE
    &[_]u8{}, // 0xBF
    &[_]u8{}, // 0xC0
    &[_]u8{}, // 0xC1
    &[_]u8{}, // 0xC2
    &[_]u8{}, // 0xC3
    &[_]u8{}, // 0xC4
    &[_]u8{}, // 0xC5
    &[_]u8{}, // 0xC6
    &[_]u8{}, // 0xC7
    &[_]u8{}, // 0xC8
    &[_]u8{}, // 0xC9
    &[_]u8{}, // 0xCA
    &[_]u8{}, // 0xCB
    &[_]u8{}, // 0xCC
    &[_]u8{}, // 0xCD
    &[_]u8{}, // 0xCE
    &[_]u8{}, // 0xCF
    &[_]u8{}, // 0xD0
    &[_]u8{}, // 0xD1
    &[_]u8{}, // 0xD2
    &[_]u8{}, // 0xD3
    &[_]u8{}, // 0xD4
    &[_]u8{}, // 0xD5
    &[_]u8{}, // 0xD6
    &[_]u8{}, // 0xD7
    &[_]u8{}, // 0xD8
    &[_]u8{}, // 0xD9
    &[_]u8{}, // 0xDA
    &[_]u8{}, // 0xDB
    &[_]u8{}, // 0xDC
    &[_]u8{}, // 0xDD
    &[_]u8{}, // 0xDE
    &[_]u8{}, // 0xDF
    &[_]u8{}, // 0xE0
    &[_]u8{}, // 0xE1
    &[_]u8{}, // 0xE2
    &[_]u8{}, // 0xE3
    &[_]u8{}, // 0xE4
    &[_]u8{}, // 0xE5
    &[_]u8{}, // 0xE6
    &[_]u8{}, // 0xE7
    &[_]u8{}, // 0xE8
    &[_]u8{}, // 0xE9
    &[_]u8{}, // 0xEA
    &[_]u8{}, // 0xEB
    &[_]u8{}, // 0xEC
    &[_]u8{}, // 0xED
    &[_]u8{}, // 0xEE
    &[_]u8{}, // 0xEF
    &[_]u8{}, // 0xF0
    &[_]u8{}, // 0xF1
    &[_]u8{}, // 0xF2
    &[_]u8{}, // 0xF3
    &[_]u8{}, // 0xF4
    &[_]u8{}, // 0xF5
    &[_]u8{}, // 0xF6
    &[_]u8{}, // 0xF7
    &[_]u8{}, // 0xF8
    &[_]u8{}, // 0xF9
    &[_]u8{}, // 0xFA
    &[_]u8{}, // 0xFB
    &[_]u8{}, // 0xFC
    &[_]u8{}, // 0xFD
    &[_]u8{}, // 0xFE
    &[_]u8{}, // 0xFF
};

comptime {
    std.debug.assert(Timings.len == 256);
}
